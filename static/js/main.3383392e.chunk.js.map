{"version":3,"sources":["data/reducer.ts","data/store.tsx","pages/register.tsx","pages/login.tsx","pages/home.tsx","components/my-app-bar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Reducer","state","action","type","user","payload","undefined","StoreContext","createContext","Store","props","useReducer","dispatch","useEffect","Provider","value","children","Register","useContext","useState","name","setName","email","setEmail","password","setPassword","showPassword","setShowPassword","errors","setErrors","history","useHistory","setWaiting","handleSubmit","event","a","preventDefault","axios","post","push","response","data","Grid","container","item","xs","onSubmit","Box","mb","Typography","color","variant","TextField","error","Boolean","fullWidth","helperText","label","margin","onChange","e","newErrors","Object","assign","handleNameChange","target","handleEmailChange","FormControl","style","marginTop","InputLabel","htmlFor","OutlinedInput","id","labelWidth","handlePasswordChange","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","edge","my","Button","disabled","keys","length","size","Link","component","RouterLink","to","Login","console","Home","Container","maxWidth","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","list","width","MyAppBar","classes","anchorEl","setAnchorEl","menuOpen","drawerOpen","setDrawerOpen","handleClose","handleLogout","get","handleLogin","className","AppBar","Toolbar","aria-controls","aria-haspopup","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","Drawer","onKeyDown","List","ListItem","button","ListItemIcon","ListItemText","primary","defaults","baseURL","window","location","hostname","withCredentials","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3383392e.chunk.js","sourcesContent":["import { iState, iAction } from './interfaces'\n\nconst Reducer = (state: iState, action: iAction) => {\n  switch (action.type){\n    case 'LOGIN':\n      return {\n        ...state,\n        user: action.payload\n      }\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: undefined\n      }\n    default:\n      return state\n  }\n}\n\nexport default Reducer","import { createContext, useReducer, useEffect } from 'react'\nimport Reducer from './reducer'\nimport { iState, iContext } from './interfaces'\n\nexport const StoreContext = createContext({} as iContext)\n\nconst Store = (props: any) => {\n  const initState: iState = {} \n  const [state, dispatch] = useReducer(Reducer, initState)\n\n  useEffect(() => {\n  }, [])\n  return (\n    <StoreContext.Provider value={{state, dispatch}}>\n      {props.children}\n    </StoreContext.Provider>\n  )\n}\n \nexport default Store\n\n","import { useState, useContext, FormEvent } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport { StoreContext } from '../data/store'\n\ninterface errorType {\n  name?: string,\n  email?: string,\n  password?: string\n}\ninterface userType {\n  name: string,\n  email: string,\n}\nconst Register = () => {\n  const { dispatch } = useContext(StoreContext)\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [showPassword, setShowPassword] = useState(false)\n  const [errors, setErrors] = useState<errorType>({})\n  const history = useHistory()\n  const [waiting, setWaiting] = useState(false)\n\n  const handleSubmit = async (event: FormEvent) => {\n    try {\n      event.preventDefault()\n      setWaiting(true)\n      const user = await axios.post('/auth/register', {name, email, password})\n      dispatch({type: 'LOGIN', payload: user})\n      setWaiting(false)\n      history.push('/')\n    }catch (err) {\n      setErrors(err.response.data.errors)\n    }\n  }\n  const handleNameChange = (value: string) => {\n    setName(value)\n    if (errors?.name) {\n      let newErrors: errorType = {}\n      Object.assign(newErrors, errors)\n      delete newErrors.name\n      setErrors(newErrors)\n    }\n  }\n  const handleEmailChange = (value: string) => {\n    setEmail(value)\n    if (errors?.email) {\n      let newErrors: errorType = {}\n      Object.assign(newErrors, errors)\n      delete newErrors.email\n      setErrors(newErrors)\n    }\n  }\n  const handlePasswordChange = (value: string) => {\n    setPassword(value)\n    if (errors?.email) {\n      let newErrors: errorType = {}\n      Object.assign(newErrors, errors)\n      delete newErrors.password\n      setErrors(newErrors)\n    }\n  }\n  return (\n    <Grid container>\n      <Grid item xs={3}></Grid>\n      <Grid item xs={6}>\n        <form onSubmit={handleSubmit}>\n          <Box mb={3}>\n            <Typography color=\"textPrimary\" variant=\"h2\">\n              Sign up\n            </Typography>\n          </Box>\n          <TextField\n            error={Boolean(errors?.name)}\n            fullWidth\n            helperText={errors?.name}\n            label=\"Name\"\n            margin=\"normal\"\n            name=\"name\"\n            onChange={e => handleNameChange(e.target.value)}\n            type=\"text\"\n            value={name}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(errors?.email)}\n            fullWidth\n            helperText={errors?.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onChange={e => handleEmailChange(e.target.value)}\n            type=\"email\"\n            value={email}\n            variant=\"outlined\"\n          />\n          <FormControl fullWidth variant=\"outlined\" style={{marginTop: '1em'}}>\n            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n            <OutlinedInput\n            id=\"outlined-adornment-password\"\n            type={showPassword ? 'text' : 'password'}\n            value={password}\n            labelWidth={70}\n            onChange={e => handlePasswordChange(e.target.value)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  onMouseDown={e => e.preventDefault()}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n            />\n          </FormControl>\n          <Box my={2}>\n            <Button\n              color=\"primary\"\n              disabled={Boolean(!name || !email || !password || (errors && Object.keys(errors).length > 0))}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Sign up now\n            </Button>\n          </Box>\n          <Typography color=\"textSecondary\">\n            Have an account?{' '}\n            <Link component={RouterLink} to=\"/login\" variant=\"h6\">\n              Sign in\n            </Link>\n          </Typography>\n        </form>\n      </Grid>\n      <Grid item xs={3}></Grid>\n    </Grid>\n  );\n};\n\nexport default Register;","import { useState, FormEvent, useContext } from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom'\nimport Box from '@material-ui/core/Box'\nimport Button from '@material-ui/core/Button'\nimport Link from '@material-ui/core/Link'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport OutlinedInput from '@material-ui/core/OutlinedInput'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios'\nimport { StoreContext } from '../data/store'\n\ninterface errorType {\n  email?: string,\n  password?: string\n}\ninterface userType {\n  name: string,\n  email: string,\n}\nconst Login = () => {\n  const { dispatch } = useContext(StoreContext)\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [showPassword, setShowPassword] = useState(false)\n  const [errors, setErrors] = useState<errorType>({})\n  const [waiting, setWaiting] = useState(false)\n  const history = useHistory()\n  const handleSubmit = async (event: FormEvent) => {\n    try {\n      event.preventDefault()\n      setWaiting(true)\n      const user = await axios.post('/auth/login', {email, password})\n      dispatch({type: 'LOGIN', payload: user})\n      setWaiting(false)\n      history.push('/')\n    }catch (err) {\n      console.error('error === ', err)\n      setWaiting(false)\n      setErrors(err.response?.data.errors)\n    }\n  }\n  const handleEmailChange = (value: string) => {\n    setEmail(value)\n    if (errors?.email) {\n      let newErrors: errorType = {}\n      Object.assign(newErrors, errors)\n      delete newErrors.email\n      setErrors(newErrors)\n    }\n  }\n  const handlePasswordChange = (value: string) => {\n    setPassword(value)\n    if (errors?.email) {\n      let newErrors: errorType = {}\n      Object.assign(newErrors, errors)\n      delete newErrors.password\n      setErrors(newErrors)\n    }\n  }\n  return (\n    <Grid container>\n      <Grid item xs={3}></Grid>\n      <Grid item xs={6}>\n        <form onSubmit={handleSubmit}>\n          <Box mb={3}>\n            <Typography color=\"textPrimary\" variant=\"h2\">\n              Sign in\n            </Typography>\n          </Box>\n          <TextField\n            error={Boolean(errors?.email)}\n            fullWidth\n            helperText={errors?.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onChange={e => handleEmailChange(e.target.value)}\n            type=\"email\"\n            value={email}\n            variant=\"outlined\"\n          />\n          <FormControl fullWidth variant=\"outlined\" style={{marginTop: '1em'}}>\n            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n            <OutlinedInput\n            id=\"outlined-adornment-password\"\n            type={showPassword ? 'text' : 'password'}\n            value={password}\n            labelWidth={70}\n            onChange={e => handlePasswordChange(e.target.value)}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  onMouseDown={e => e.preventDefault()}\n                  edge=\"end\"\n                >\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n            />\n          </FormControl>\n          <Box my={2}>\n            <Button\n              color=\"primary\"\n              disabled={Boolean(!email || !password || (errors && Object.keys(errors).length > 0))}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Sign in\n            </Button>\n          </Box>\n          <Typography color=\"textSecondary\">\n            New user?{' '}\n            <Link component={RouterLink} to=\"/register\" variant=\"h6\">\n              Sign up\n            </Link>\n          </Typography>\n        </form>\n      </Grid>\n      <Grid item xs={3}></Grid>\n    </Grid>\n  );\n};\n\nexport default Login;","import Container from '@material-ui/core/Container';\n\nconst Home = () => (\n  <Container maxWidth=\"lg\">\n    <h1>Home page</h1>\n  </Container>\n)\n\n\nexport default Home","import { useState, useContext, MouseEvent } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport LockOpen from '@material-ui/icons/LockOpen';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useHistory } from 'react-router-dom'\nimport { StoreContext } from '../data/store'\nimport axios from 'axios'\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    list: {\n      width: 250,\n    },\n \n  }),\n);\n\nconst MyAppBar = () => {\n  const classes = useStyles();\n  const history = useHistory()\n  const { state, dispatch } = useContext(StoreContext)\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const menuOpen = Boolean(anchorEl);\n  const [drawerOpen, setDrawerOpen] = useState(false)\n  const [waiting, setWaiting] = useState(false)\n\n  const handleMenu = (event: MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleLogout = async () => {\n    setWaiting(true)\n    await axios.get('/auth/logout')\n    dispatch({type: 'LOGOUT'})\n    setWaiting(false)\n    setAnchorEl(null);\n  };\n  const handleLogin = async () => {\n    if (state.user) {\n      setWaiting(true)\n      await axios.get('/auth/logout')\n      dispatch({type: 'LOGOUT'})\n      setWaiting(false)\n    }\n    else history.push('/login')\n  }\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => setDrawerOpen(!drawerOpen)}>\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            CRM\n          </Typography>\n          {state.user ? (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={menuOpen}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n              </Menu>\n            </div>\n          ) : <Button color=\"inherit\" onClick={() => history.push('/login')}>Login</Button>}\n        </Toolbar>\n      </AppBar>\n      <Drawer open={drawerOpen} onClose={() => setDrawerOpen(!drawerOpen)}>\n        <div\n          className={classes.list}\n          onClick={() => setDrawerOpen(!drawerOpen)}\n          onKeyDown={() => setDrawerOpen(!drawerOpen)}\n          >\n          <List>\n            <ListItem button onClick={handleLogin}>\n              <ListItemIcon>{<LockOpen />}</ListItemIcon>\n              <ListItemText primary={state.user ? 'Logout' : 'Login'} />\n            </ListItem>\n          </List>\n        </div>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default MyAppBar\n\n\n\n\n","import './App.css';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Register from './pages/register';\nimport Login from './pages/login';\nimport Home from './pages/home';\nimport MyAppBar from './components/my-app-bar'\nimport axios from 'axios'\nimport Store from './data/store'\n\naxios.defaults.baseURL = window.location.hostname === 'localhost' ? 'http://localhost:5000/api' : 'https://first-express-orm.herokuapp.com/api'\naxios.defaults.withCredentials = true\n\nconst App = () => {\n  return (\n    <Store>\n      <BrowserRouter>\n        <MyAppBar />\n        <Switch>\n          <Route path=\"/\" exact component={Home}/>\n          <Route path=\"/register\" component={Register}/>\n          <Route path=\"/login\" component={Login}/>\n        </Switch>\n      </BrowserRouter>\n    </Store>\n  );\n}\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}